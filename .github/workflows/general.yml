name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_USER: "kelley"
          POSTGRES_PASSWORD: "password"
          POSTGRES_DB: "plesiosaurus"
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 10
    env:
      SQLX_VERSION: 0.5.7
      SQLX_FEATURES: postgres
    steps:
      - name: Test database
        env:
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
        run: |
          echo "Test $POSTGRES_PORT"
          psql "postgres://kelley:password@localhost:${POSTGRES_PORT:=5432}/plesiosaurus" -c "select 1"

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cache sqlx-cli
        uses: actions/cache@v2
        id: cache-sqlx
        with:
          path: |
            ~/.cargo/bin/sqlx
          key: ${{ runner.os }}-sqlx-${{ env.SQLX_VERSION }}-${{ env.SQLX_FEATURES }}

      - name: Install sqlx-cli 
        uses: actions-rs/cargo@v1
        if: steps.cache-sqlx.outputs.cache-hit == false
        with:
          command: install 
          args: >
            sqlx-cli
            --force
            --version=${{ env.SQLX_VERSION }}
            --features=${{ env.SQLX_FEATURES }}
            --no-default-features
            --locked

      - name: Migrate database
        env:
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
        run: |
          SKIP_PG_CTL=true ./scripts/init_db.sh

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
